[project]
name = "backend"
version = "0.1.0"
description = "Default template for PDM package"
authors = [
    {name = "Sujit Warrier", email = "sujit.warrier11@gmail.com"},
]
dependencies = ["quart>=0.20.0", "quart-auth>=0.11.0", "bcrypt>=4.2.1", "zxcvbn>=4.4.28", "itsdangerous>=2.2.0", "quart-rate-limiter>=0.11.0", "quart-schema>=0.21.0", "pydantic[email]>=2.10.4", "langsmith>=0.2.7", "langchain>=0.3.13"]
requires-python = "==3.12.*"
readme = "README.md"
license = {text = "MIT"}


[dependency-groups]
dev = [
    "black>=24.10.0",
    "isort>=5.13.2",
    "mypy>=1.14.0",
    "flake8>=7.1.1",
    "bandit>=1.8.0",
    "vulture>=2.14",
    "pytest>=8.3.4",
    "pytest-asyncio>=0.25.0",
    "freezegun>=1.5.1",
]

[tool.black]
target-version = ["py312"]

[tool.isort]
profile = "black"

[tool.pdm]
distribution = false

[tool.vulture]
min_confidence = 100

[tool.pytest.ini_options]
addopts = "--showlocals"
asyncio_mode = "auto"
pythonpath = ["src"]

[tool.pdm.scripts]
format-black = "black src/ tests/"
format-isort = "isort src tests"
format = {composite = ["format-black", "format-isort"]}
lint-bandit = "bandit -r src/"
lint-black = "black --check --diff src/ tests/"
lint-flake8 = "flake8 src/ tests/"
lint-isort = "isort --check --diff src tests"
lint-mypy = "mypy src tests"
lint-vulture = "vulture src"
lint = {composite = ["lint-bandit", "lint-black", "lint-flake8", "lint-isort", "lint-mypy", "lint-vulture"]}
test = { cmd = "pytest tests/", env_file = "testing.env" }
start = { cmd = "quart --app src/run.py run --port 5000", env_file = "dev.env" }

